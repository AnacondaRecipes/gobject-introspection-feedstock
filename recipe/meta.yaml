{% set name = "gobject-introspection" %}
# depends on glib >=2.78
{% set version = "1.84.0" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://download.gnome.org/sources/{{ name }}/{{ '.'.join(version.split('.')[:2]) }}/{{ name }}-{{ version }}.tar.xz
  sha256: 945b57da7ec262e5c266b89e091d14be800cc424277d82a02872b7d794a84779
  patches:
    - test-fix-linux.patch  # [linux]
    # https://gitlab.gnome.org/GNOME/gobject-introspection/-/merge_requests/265
    - pkg-config.patch
    - python-hashbang.patch
    #- 0001-Don-t-add-build_root-giscanner-to-PYTHONPATH-for-run.patch

build:
  number: 0
  detect_binary_files_with_prefix: true
  skip: true  # [win and vc<14]
  ignore_run_exports:
    # cairo (and dep pixman) is only needed to run the full test suite.
    - cairo
    - pixman
  missing_dso_whitelist:      # [linux]
    - $RPATH/libm.so.6        # [linux]
    - $RPATH/libpthread.so.0  # [linux]
    - $RPATH/libc.so.6        # [linux]

requirements:
  build:
    - python
    # run-dep as a workaround for now; upstream package still imports from distutils
    - setuptools <74  # [py>311]
    - {{ posix }}bison
    - {{ posix }}flex
    - {{ posix }}patch
    - {{ posix }}sed
    - meson >=0.60.0
    - ninja-base
    - pkg-config
    - glib {{ glib }}
    - {{ compiler('c') }}
  host:
    - pkg-config
    - python
    # X11/XCB dependencies through cairo.
    - cairo {{ cairo }}
    - glib {{ glib }}
    - libffi {{ libffi }}
    - pthread-stubs 0.3
    - zlib {{ zlib }}  # [win]
    - setuptools <74
    - packaging
  run:
    - python
    # through run_exports
    - libffi
    - libglib
    - glib {{ glib }}
    # run-dep as a workaround for now; upstream package still imports from distutils
    # imports distutils.msvccompiler which has been removed on recent setuptools
    - setuptools <74  # [py>311]

test:
  requires:
    - python  # [win]
    - pkg-config
  commands:
    - g-ir-scanner --help  # [not win]
    - "python \"%PREFIX%\\\\Library\\\\bin\\\\g-ir-scanner\" --help"  # [win]
    - g-ir-compiler --help
    # check that g-ir-scanner can be found through pkg-config (used by downstream builds)
    - test -f `pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`  # [unix]
    - pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0
    - "for /f \"tokens=*\" %%a in (`pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`) do if not exist \"%%a\" exit 1"  # [win]
    - test -f $PREFIX/lib/libgirepository-1.0${SHLIB_EXT}  # [not win]
    - if not exist %PREFIX%\Library\bin\girepository-1.0-1.dll exit 1  # [win]
    - if not exist %PREFIX%\Library\lib\girepository-1.0.lib exit 1  # [win]

about:
  home: https://gi.readthedocs.io
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file:
    - COPYING
    - COPYING.GPL
    - COPYING.LGPL
  summary: Middleware for binding GObject-based code to other languages.
  description: |
    GObject introspection is a middleware layer between C libraries (using GObject)
    and language bindings. The C library can be scanned at compile time and generate
    a metadata file, in addition to the actual native C library. Then at runtime,
    language bindings can read this metadata and automatically provide bindings to
    call into the C library.
  doc_url: https://gi.readthedocs.io
  dev_url: https://gitlab.gnome.org/GNOME/gobject-introspection/-/tree/main

extra:
  recipe-maintainers:
    - pkgw
    - ocefpaf
    - scopatz
    - tschoonj
