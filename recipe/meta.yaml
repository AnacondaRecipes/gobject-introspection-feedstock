{% set name = "gobject-introspection" %}
{% set version = "1.68.0" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://download.gnome.org/sources/{{ name }}/{{ '.'.join(version.split('.')[:2]) }}/{{ name }}-{{ version }}.tar.xz
  sha256: d229242481a201b84a0c66716de1752bca41db4133672cfcfb37c93eb6e54a27
  patches:
    - test-fix.patch  # [linux]

build:
  number: 1
  detect_binary_files_with_prefix: true
  skip: true  # [py<35]
  skip: true  # [win and vc<14]
  ignore_run_exports:
    # this is only needed to run the full test suite.
    - cairo

requirements:
  build:
    - python
    - {{ posix }}bison
    - {{ posix }}flex
    - meson                              # [not win]
    - meson 0.53.2                       # [win]
    - ninja
    - {{ posix }}patch
    - {{ native }}pkg-config
    - {{ compiler('c') }}
    - {{ cdt('libx11-devel') }}          # [linux]
    - {{ cdt('libxrender-devel') }}      # [linux]
    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
    - {{ cdt('libxau-devel') }}          # [linux]
    - {{ cdt('libxext-devel') }}         # [linux]
  host:
    - cairo
    - gettext  # [osx]
    - glib >=2.56.1
    - libffi
    - pthread-stubs
    # - libxcb  # [linux]
    - python
    # - zlib  # [linux or win]
    # - pcre  # [linux or win]
  run:
    - libffi
    - python

test:
  requires:
    - pkg-config
  commands:
    - conda inspect linkages -p $PREFIX $PKG_NAME  # [not win]
    - conda inspect objects -p $PREFIX $PKG_NAME  # [osx]
    - g-ir-scanner --help  # [not win]
    - python "%PREFIX%\\Library\\bin\\g-ir-scanner" --help  # [win]
    - g-ir-compiler --help

    # check that g-ir-scanner can be found through pkg-config (used by downstream builds)
    - test -f `pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`  # [unix]
    - for /f "usebackq tokens=*" %%a in (`pkg-config --variable=g_ir_scanner --dont-define-prefix gobject-introspection-1.0`) do if not exist "%%a" exit 1  # [win]
  downstreams:
    - pygobject

about:
  home: https://wiki.gnome.org/action/show/Projects/GObjectIntrospection
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: COPYING
  summary: 'Middleware for binding GObject-based code to other languages.'
  description: |
    GObject introspection is a middleware layer between C libraries (using GObject)
    and language bindings. The C library can be scanned at compile time and generate
    a metadata file, in addition to the actual native C library. Then at runtime,
    language bindings can read this metadata and automatically provide bindings to
    call into the C library.
  doc_url: https://wiki.gnome.org/action/show/Projects/GObjectIntrospection#Documentation
  dev_url: https://git.gnome.org//browse/gobject-introspection/tree/
  doc_source_url: https://git.gnome.org/browse/gobject-introspection/tree/docs

extra:
  recipe-maintainers:
    - pkgw
    - ocefpaf
    - scopatz
    - tschoonj
